name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure previous commit is available

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)  # Use last commit as fallback
          fi
          
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD)
          echo "Detected changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Exiting..."
            exit 1
          fi

          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine File Types
        id: determine-file
        run: |
          LANGUAGE_LIST=""
          for file in $CHANGED_FILES; do
            case "$file" in
              *.c) LANGUAGE_LIST+="C " ;;
              *.cpp) LANGUAGE_LIST+="C++ " ;;
              *.py) LANGUAGE_LIST+="Python " ;;
              *.java) LANGUAGE_LIST+="Java " ;;
            esac
          done
          echo "DETECTED_LANGUAGES=$(echo $LANGUAGE_LIST | tr ' ' '\n' | sort -u | tr '\n' ' ')" >> $GITHUB_ENV
          echo "Detected languages: $LANGUAGE_LIST"

      - name: Install Dependencies
        run: |
          sudo apt update
          if [[ "$DETECTED_LANGUAGES" == *"C"* ]]; then sudo apt install -y gcc; fi
          if [[ "$DETECTED_LANGUAGES" == *"C++"* ]]; then sudo apt install -y g++; fi
          if [[ "$DETECTED_LANGUAGES" == *"Python"* ]]; then sudo apt install -y python3; fi
          if [[ "$DETECTED_LANGUAGES" == *"Java"* ]]; then sudo apt install -y openjdk-17-jdk; fi

      - name: Compile and Run C Tests
        if: contains(env.DETECTED_LANGUAGES, 'C')
        run: |
          echo "Compiling C files..."
          gcc tests/test.c -o test_runner
          echo "Running C Tests..."
          ./test_runner | tee test_results.log

      - name: Compile and Run C++ Tests
        if: contains(env.DETECTED_LANGUAGES, 'C++')
        run: |
          echo "Compiling C++ files..."
          g++ tests/test.cpp -o test_runner_cpp
          echo "Running C++ Tests..."
          ./test_runner_cpp | tee test_results.log

      - name: Run Python Tests
        if: contains(env.DETECTED_LANGUAGES, 'Python')
        run: |
          echo "Running Python Tests..."
          python3 tests/test.py | tee test_results.log

      - name: Compile and Run Java Tests
        if: contains(env.DETECTED_LANGUAGES, 'Java')
        run: |
          echo "Compiling Java files..."
          mkdir -p bin
          javac -d bin solutions/Solution.java tests/Test.java 2>&1 | tee test_results.log
          
          if [ $? -eq 0 ]; then
            echo "Running Java Test Cases..."
            java -cp bin tests.Test | tee -a test_results.log
          else
            echo "Java compilation failed." | tee -a test_results.log
          fi

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
          if-no-files-found: ignore
          compression-level: 6
          overwrite: false
          include-hidden-files: false
